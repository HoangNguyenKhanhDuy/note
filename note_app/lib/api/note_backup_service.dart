import 'dart:convert';
import 'dart:io';
import 'package:flutter/material.dart';
import '../models/note.dart';

class NoteBackupService {
  /// L·∫•y ƒë∆∞·ªùng d·∫´n t·ªõi file sao l∆∞u
  static Future<String> _getBackupFilePath() async {
    // ƒê∆∞·ªùng d·∫´n t√πy ch·ªânh tr√™n Windows
    String customPath = 'C:\\LuuNote\\backup_notes.json';

    // Ki·ªÉm tra xem th∆∞ m·ª•c c√≥ t·ªìn t·∫°i kh√¥ng, n·∫øu kh√¥ng th√¨ t·∫°o m·ªõi
    final directory = Directory('C:\\LuuNote');
    if (!(await directory.exists())) {
      await directory.create(recursive: true); // T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
    }

    return customPath;
  }

  /// Sao l∆∞u ghi ch√∫ v√†o file JSON (l·ªçc theo userId)
  static Future<void> backupNotes(BuildContext context, List<Note> notes) async {
    try {
      final filePath = await _getBackupFilePath();
      final file = File(filePath);

      // Chuy·ªÉn t·∫•t c·∫£ c√°c ghi ch√∫ th√†nh JSON m√† kh√¥ng l·ªçc theo userId
      final notesJson = jsonEncode(notes.map((note) => note.toJson()).toList());

      // Ki·ªÉm tra v√† in ra n·ªôi dung JSON ƒë·ªÉ debug
      print("N·ªôi dung JSON: $notesJson");

      // Ghi d·ªØ li·ªáu v√†o file
      await file.writeAsString(notesJson);

      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("üìÇ ƒê√£ sao l∆∞u ${notes.length} ghi ch√∫ th√†nh c√¥ng!")),
      );
    } catch (e) {
      print("L·ªói sao l∆∞u: $e");
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("‚ùå ƒê√£ x·∫£y ra l·ªói khi sao l∆∞u!")),
      );
    }
  }

  /// Kh√¥i ph·ª•c ghi ch√∫ t·ª´ file JSON (tr·∫£ v·ªÅ t·∫•t c·∫£, l·ªçc ·ªü ngo√†i n·∫øu mu·ªën)
  static Future<List<Note>> restoreNotes(BuildContext context) async {
    try {
      final filePath = await _getBackupFilePath();
      final file = File(filePath);

      if (await file.exists()) {
        final contents = await file.readAsString();
        final List<dynamic> notesJson = jsonDecode(contents);

        final List<Note> restoredNotes = notesJson
            .map((e) => Note.fromJson(e as Map<String, dynamic>))
            .toList();

        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text("üîÑ ƒê√£ kh√¥i ph·ª•c ghi ch√∫ th√†nh c√¥ng!")),
        );

        return restoredNotes;
      } else {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text("‚ùå Kh√¥ng t√¨m th·∫•y file sao l∆∞u.")),
        );
        return [];
      }
    } catch (e) {
      print("L·ªói kh√¥i ph·ª•c: $e");
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("‚ùå ƒê√£ x·∫£y ra l·ªói khi kh√¥i ph·ª•c!")),
      );
      return [];
    }
  }
}
